;; Home row mods QWERTY example with more complexity
;; Some of the changes from the basic example:
;; - when a home row mod activates tap, the home row mods are disabled
;;   while continuing to type rapidly
;; - tap-hold-release helps make the hold action more responsive
;; - pressing another key on the same half of the keyboard
;;   as the home row mod will activate an early tap action

(defcfg
  process-unmapped-keys yes
  concurrent-tap-hold yes
)
(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet rctl
)

(defchordsv2
  (j k)    esc                200 all-released  (symbols)
)
(defalias
  ;; toggle layer aliases
  sym (layer-while-held symbols)

  ;; tap-hold keys with letters for tap and layer change for hold
  spacesym (tap-hold-release 200 200 spc @sym)
)

(defvar
  ;; Note: consider using different time values for your different fingers.
  ;; For example, your pinkies might be slower to release keys and index
  ;; fingers faster.
  tap-time 200
  hold-time 150

  left-hand-keys (
    q w e r t
    a s d f g
    z x c v b
  )
  right-hand-keys (
    y u i o p
    h j k l ;
    n m , . /
  )
)
(deflayer base
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    \    ]    \
  caps @a   @s   @d   @f   g    h    @j   @k   @l   @;   S-=    ret
  lsft z    x    c    v    b    n    m    ,    .    ]    rsft
  lctl lmet lalt           @spacesym      ralt rmet rctl
)

(deflayer nomods
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           @spacesym      ralt rmet rctl
)

;; Symbol layer from glorious engrammer
;; Kanata inspiration from https://github.com/s5k/nixdots/blob/817638887c68866eaf18f78dc7fc36f6f823d481/dotfiles/kanata/selenium.kbd#L4
;; _    _    _    _    _    _    _    _    _    _    _    _    _    _
;; &    !    {    }    ;    ?    `    _    _    _    _    _    _    _
;; #    ^    =    _    $    *    "    _    _    _    _    _
;; ~    (    |    -    )    /    '    _    _    _    _    _
;; _    _    _              _              _    _    _
(deflayer symbols
  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX   XX
  S-7  S-1  S-[  S-]  ;    S-/  grv  kp7  kp8  kp9   XX   XX   XX   XX
  S-3  S-6  =    S--  S-4  S-8  S-'  kp4  kp5  kp6   XX   XX   XX
  @tld S-9  S-\  -    S-0  /    '    kp1  kp2  kp3   XX   XX
  XX   XX   S-;             XX             kp0   XX   XX
)

(deffakekeys
  to-base (layer-switch base)
)
(defalias
  tld S-grv
  tap (multi
    (layer-switch nomods)
    (on-idle-fakekey to-base tap 20)
  )

  a (tap-hold-release-keys $tap-time $hold-time (multi a @tap) lmet $left-hand-keys)
  s (tap-hold-release-keys $tap-time $hold-time (multi s @tap) lalt $left-hand-keys)
  d (tap-hold-release-keys $tap-time $hold-time (multi d @tap) lsft $left-hand-keys)
  f (tap-hold-release-keys $tap-time $hold-time (multi f @tap) lctl $left-hand-keys)
  j (tap-hold-release-keys $tap-time $hold-time (multi j @tap) rctl $right-hand-keys)
  k (tap-hold-release-keys $tap-time $hold-time (multi k @tap) rsft $right-hand-keys)
  l (tap-hold-release-keys $tap-time $hold-time (multi l @tap) ralt $right-hand-keys)
  ; (tap-hold-release-keys $tap-time $hold-time (multi [ @tap) rmet $right-hand-keys)
)
